- name: Get the latest version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/ajeetdsouza/zoxide/releases/latest"
    return_content: yes
  register: json_data

- name: Get the latest version
  set_fact:
    version: "{{ json_data['json'] | json_query('tag_name') | replace('v', '') }}"

- name: Download the latest version of the zoxide
  ansible.builtin.apt:
    deb: "https://github.com/ajeetdsouza/zoxide/releases/download/v{{ version }}/zoxide_{{ version }}_amd64.deb"
  become: true

- name: Update fish for zoxide
  ansible.builtin.lineinfile:
    path: ~/.config/fish/config.fish
    line: zoxide init fish | source
  ignore_errors: true

- name: Update nushell config for zoxide
  ansible.builtin.blockinfile:
    path: ~/.config/nushell/config.nu
    marker: "# {mark} ANSIBLE MANAGED BLOCK - nushell zoxide config"
    block: |
      let-env __zoxide_hooked = true
      let-env config = ($env.config | update hooks.env_change.PWD ($env.config.hooks.env_change.PWD | append {|_, dir|
        zoxide add -- $dir
      }))
      source ~/.zoxide.nu


  ignore_errors: true

- name: Get the latest version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/rsteube/carapace-bin/releases/latest"
    return_content: yes
  register: json_data

- name: Get the latest version
  set_fact:
    version: "{{ json_data['json'] | json_query('tag_name') | replace('v', '') }}"

- name: Download the latest version of the carapace
  ansible.builtin.apt:
    deb: "https://github.com/rsteube/carapace-bin/releases/download/v{{ version }}/carapace-bin_{{ version }}_linux_amd64.deb"
  become: true

- name: Update fish for carapace
  ansible.builtin.lineinfile:
    path: ~/.config/fish/config.fish
    line: carapace _carapace | source
  ignore_errors: true

- name: Update nushell config for carapace
  ansible.builtin.blockinfile:
    path: ~/.config/nushell/config.nu
    marker: "# {mark} ANSIBLE MANAGED BLOCK - carapace"
    block: |
      let carapace_completer = {|spans|
          carapace $spans.0 nushell $spans | from json
      }
      let-env config = ($env.config | upsert completions  {
          case_sensitive: false
          quick: true
          partial: true
          algorithm: "fuzzy"
          external: {
            enable: true
            max_results: 100
            completer: $carapace_completer
          }
      })
  ignore_errors: true

- name: Get the latest version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/sharkdp/bat/releases/latest"
    return_content: yes
  register: json_data

- name: Get the latest version
  set_fact:
    version: "{{ json_data['json'] | json_query('tag_name') | replace('v', '') }}"

- name: Download the latest version of the carapace
  ansible.builtin.apt:
    deb: "https://github.com/sharkdp/bat/releases/download/v{{version}}/bat_{{version}}_amd64.deb"
  become: true


- name: Get the latest version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/sharkdp/fd/releases/latest"
    return_content: yes
  register: json_data

- name: Get the latest version
  set_fact:
    version: "{{ json_data['json'] | json_query('tag_name') | replace('v', '') }}"

- name: Download the latest version of the fd
  ansible.builtin.apt:
    deb: "https://github.com/sharkdp/fd/releases/download/v{{version}}/fd_{{version}}_amd64.deb"
  become: true

- name: Install atuin
  ansible.builtin.shell: curl https://raw.githubusercontent.com/ellie/atuin/main/install.sh

- name: Update fish for atuin
  ansible.builtin.lineinfile:
    path: ~/.config/fish/config.fish
    line: atuin init fish --disable-up-arrow | source
  ignore_errors: true

- name: Create atuin for nushell
  ansible.builtin.shell: atuin init nu --disable-up-arrow > ~/.atuin.nu

- name: Update nushell config for atuin
  ansible.builtin.lineinfile:
    path: ~/.config/nushell/config.nu
    line: source ~/.atuin.nu
  ignore_errors: true
