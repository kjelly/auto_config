---
- check_file_content: path=/proc/version pattern="Microsoft"
  register: is_wsl

- debug: var=is_wsl

- file: path="~/.config" state=directory mode=0755

- file: path="~/.config/fish" state=directory mode=0755

- file: path="~/.config/omf" state=directory mode=0755

- template: src=config.fish dest="~/.config/fish/config.fish"

- template: src=bundle dest="~/.config/omf/bundle"

- template: src=theme dest="~/.config/omf/theme"

- copy: src=fish dest="~/.config/"

- block:
   - shell: "go build get_color.go"
     args:
       chdir: "~/.config/fish/"
   - shell: "go build get_host_color.go"
     args:
       chdir: "~/.config/fish/"
   - shell: "go build print_cwd.go"
     args:
       chdir: "~/.config/fish/"
  rescue:
   - file: src="~/.config/fish/get_color.py" dest="~/.config/fish/get_color" state=link force=yes
   - file: src="~/.config/fish/get_host_color.py" dest="~/.config/fish/get_host_color" state=link force=yes
   - file: src="~/.config/fish/print_cwd.py" dest="~/.config/fish/print_cwd" state=link force=yes

- path_generator: bin='node'
  register: stdout

- set_fact: NODE_BIN_PATH={{ stdout.PATH }}

- template: src="sudonpm" dest="~/bin/" mode=755

- lineinfile:
    path: "~/.config/fish/functions/fzf_key_bindings.fish"
    state: "present"
    regexp: "bind \\et fzf-file-widget"
    insertafter: "bind \\\\ct fzf-file-widget\n"
    line: "  bind \\et fzf-file-widget"


