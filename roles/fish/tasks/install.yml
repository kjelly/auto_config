---
- name: Install bc package(Debian family)
  apt: name={{ item }} state=present
  with_items:
    - bc
  when: ansible_os_family == "Debian" or ansible_os_family == "\"elementary\""

- name: Install bc package(RedHat family)
  yum: name={{ item }} state=present
  with_items:
    - bc
  when: ansible_os_family == "RedHat"

- stat: path=/usr/local/bin/fish
  register: fish_exec

- set_fact:
    need_install: "{{ not fish_exec.stat.exists }}"

- name: get fish version
  shell: "fish --version|awk '{print $3}'"
  register: current_fish_version
  ignore_errors: yes

- name: check fish version to decide fish need to be install or not
  set_fact:
    need_install: "{{ current_fish_version| version_compare('{{ fish_version }}', '<') }}"
  when: not need_install
  ignore_errors: yes

- name: Install fish dependent package
  apt: name={{ item }} state=present
  with_items:
    - build-essential
    - ncurses-dev
    - libncurses5-dev
    - gettext
    - autoconf
  sudo: yes
  when: (ansible_distribution == 'Ubuntu' or ansible_os_family == "\"elementary\"") and need_install

- name: Install fish dependent package
  apt: name={{ item }} state=present
  with_items:
    - build-essential
    - ncurses-dev
    - libncurses5-dev
    - gettext
    - autoconf
  sudo: yes
  when: ansible_distribution == 'Debian' and need_install

- name: Install fish dependent package
  yum: name={{ item }} state=present
  with_items:
    - ncurses-devel
  sudo: yes
  when: ansible_distribution == 'CentOS' and need_install

- name: Install fish dependent package
  dnf: name={{ item }} state=present
  with_items:
    - ncurses-devel
    - gcc-c++
  sudo: yes
  when: ansible_distribution == 'Fedora' and need_install

- name: download fish source code
  get_url: url="{{ fish_download_url }}" dest=/tmp/fish.tar.gz mode=0440
  when: need_install

- unarchive: src=/tmp/fish.tar.gz
             dest=/tmp/
  when: need_install

- name: generate fish configure
  command: "{{ item }}"
  args:
    chdir: "/tmp/fish-{{ fish_version }}"
    creates: "/tmp/fish-{{ fish_version }}/configure"
  with_items:
    - autoconf
  when: need_install

- name: generate fish Makefile
  command: "{{ item }}"
  args:
    chdir: "/tmp/fish-{{ fish_version }}"
    creates: "/tmp/fish-{{ fish_version }}/Makefile"
  with_items:
    - "./configure"
  when: need_install

- name: build fish
  command: "{{ item }}"
  args:
    chdir: "/tmp/fish-{{ fish_version }}"
  with_items:
    - make
  when: need_install

- name: install fish
  command: "{{ item }}"
  args:
    chdir: "/tmp/fish-{{ fish_version }}"
  with_items:
    - "make install"
  sudo: yes
  when: need_install

- name: install oh-my-fish
  git: repo=https://github.com/oh-my-fish/oh-my-fish
       dest="~/.local/share/omf"

- name: install virtualenv helper for fish
  pip: name=virtualfish
  sudo: yes

- name: clone fzf
  git: repo=https://github.com/junegunn/fzf dest=~/.fzf

- name: install fzf
  shell: ~/.fzf/install

