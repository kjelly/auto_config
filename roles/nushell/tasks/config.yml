---
- name: Update env.nu
  blockinfile:
    path: ~/.config/nushell/env.nu
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      let-env PATH = ($env.PATH | prepend {{ NUSHELL_EXTRA_PATH }})

- name: Update config.nu
  blockinfile:
    path: ~/.config/nushell/config.nu
    marker: "# {mark} ANSIBLE MANAGED BLOCK - nushell config"
    block: |
      let-env config = ($env.config | upsert show_banner false)
      alias vim = nvim
      alias in = enter
      alias s = shells
      alias cd1 = cd ..
      alias cd2 = cd ../../
      alias cd3 = cd ../../../
      alias cd4 = cd ../../../../
      alias cd5 = cd ../../../../../
      alias z1 = cd ..
      alias z2 = cd ../../
      alias z3 = cd ../../../
      alias z4 = cd ../../../../
      alias z5 = cd ../../../../../
      let-env config.hooks.pre_prompt = ( $env.config.hooks.pre_prompt | append [{ ||
            let direnv = (direnv export json | from json)
            let direnv = if ($direnv | length) == 1 { $direnv } else { {} }
            $direnv | load-env
          }] )
      let-env config.hooks.env_change.cloud = [{ |before, after|
        if ( $env.cloud == 1 ) {
            let-env PROMPT_COMMAND = { || create_left_prompt }
        } else {
          source ~/.oh-my-posh.nu
        }
      }]


      use ~/nu_scripts/modules/kubernetes/kubernetes.nu *
      use ~/nu_scripts/modules/git/git-v2.nu *
      use ~/nu_scripts/modules/network/ssh.nu *
      use ~/nu_scripts/modules/docker/docker.nu *
      use ~/nu_scripts/modules/nvim/nvim.nu *

      let-env config = ($env.config | upsert keybindings ( $env.config.keybindings | append [{ name: custom modifier: alt keycode: char_l mode: [emacs vi_normal vi_insert]  event: { until: [{ send: menu name: completion_menu } { send: menunext } ]} }] ))
      let-env config = ($env.config | upsert keybindings ( $env.config.keybindings | append [{ name: custom modifier: alt keycode: char_h mode: [emacs vi_normal vi_insert]  event: { send: menuprevious } }] ))
      let-env config = ($env.config | upsert keybindings ( $env.config.keybindings | append [{ name: custom modifier:alt keycode: char_j mode: [emacs vi_normal vi_insert]  event: { send: down } }] ))
      let-env config = ($env.config | upsert keybindings ( $env.config.keybindings | append [{ name: custom modifier:alt keycode: char_k mode: [emacs vi_normal vi_insert]  event: { send: up } }] ))

- name: Check if starship exists
  shell: which starship
  register: starship_result

- name: Render config if starship exists
  blockinfile:
    path: ~/.config/nushell/config.nu
    marker: "# {mark} ANSIBLE MANAGED BLOCK - starship"
    block: |
      def create_left_prompt [] {
          starship prompt --cmd-duration $env.CMD_DURATION_MS $'--status=($env.LAST_EXIT_CODE)'
      }
  when: starship_result.rc == 0

- name: Check if file exists
  stat:
    path: ~/.oh-my-posh.nu
  register: file_status


- name: Update config.nu
  blockinfile:
    path: ~/.config/nushell/config.nu
    marker: "# {mark} ANSIBLE MANAGED BLOCK - oh-my-posh"
    block: |
      source ~/.oh-my-posh.nu
  when: file_status.stat.exists and starship_result.rc > 0
