---
- name: remove vim from apt
  apt: name=vim state=absent
  when: (ansible_distribution == "Debian" or ansible_distribution == 'Ubuntu') and programming == true
  ignore_errors: yes
  sudo: yes

- stat: path=/usr/local/bin/vim
  register: vim_exec

- debug: var=vim_exec

- set_fact:
    need_install: "{{ not vim_exec.stat.exists }}"

- debug: var=need_install

- name: clone vim
  git: repo=https://github.com/vim/vim
       dest="/tmp/vim" depth=1 force=yes
  when: need_install and programming == true

- name: Install packages
  apt: name={{ item }} state=present
  with_items:
   - libncurses5-dev
   - libncursesw5-dev
   - exuberant-ctags
   - cmake # for YouCompleteMe
   - python3-dev
   - "silversearcher-ag"
   - ruby
   - "ruby-dev"
   - "python3-pip"
   - libtool # for neovim
   - pkgconf # for neovim
   - automake # for neovim
   - luarocks # for neovim
   - m4 # for neovim
   - python-virtualenv # for neovim

  sudo: yes
  when: ansible_distribution == 'Ubuntu' and programming == true

- name: generate vim Makefile
  command: "make distclean"
  args:
    chdir: "/tmp/vim"
  when: need_install and programming == true
  ignore_errors: yes

- name: generate vim Makefile
  command: "./configure --enable-pythoninterp --enable-python3interp --enable-cscope"
  args:
    chdir: "/tmp/vim"
  when: need_install and programming == true

- name: make vim
  command: "make"
  args:
    chdir: "/tmp/vim"
    creates: "/tmp/vim/src/vim"
  when: need_install and programming == true

- name: make install vim
  command: "make install"
  args:
    chdir: "/tmp/vim"
  when: need_install and programming == true
  sudo: yes

- name: Install vim package
  apt: name={{ item }} state=present
  with_items:
   - vim
   - gawk
   - exuberant-ctags
   - ruby
   - "ruby-dev"
  sudo: yes
  when: ansible_distribution == 'Ubuntu' and programming == false

- name: Install vim package
  apt: name={{ item }} state=present
  with_items:
   - vim
   - libncurses5-dev
   - libncursesw5-dev
   - gawk
   - exuberant-ctags
   - cmake # for YouCompleteMe
   - libsm-dev
   - ruby
   - "ruby-dev"
  sudo: yes
  when: ansible_distribution == 'Debian' and programming == false

- name: Install vim package
  dnf: name={{ item }} state=present
  with_items:
   - vim
   - ctags-etags
  sudo: yes
  when: ansible_distribution == 'Fedora' and programming == false

- name: Install vim package
  dnf: name={{ item }} state=present
  with_items:
   - vim-enhanced
  sudo: yes
  when: ansible_distribution == 'Centos' and programming == false

- name: clone fzf
  git: repo=https://github.com/junegunn/fzf dest=~/.fzf

- name: install fzf
  shell: ~/.fzf/install

- name: Install vim package
  apt: name={{ item }} state=present
  with_items:
   - vim
  sudo: yes
  when: ansible_distribution == 'Ubuntu' and programming == false

- name: Install vim package
  apt: name={{ item }} state=present
  with_items:
   - vim
   - libncurses5-dev
   - libncursesw5-dev
   - gawk
   - exuberant-ctags
   - cmake # for YouCompleteMe
   - libsm-dev
  sudo: yes
  when: ansible_distribution == 'Debian' and programming == false

- name: Install vim package
  dnf: name={{ item }} state=present
  with_items:
   - vim
   - ctags-etags
  sudo: yes
  when: ansible_distribution == 'Fedora' and programming == false

- name: Install vim package
  dnf: name={{ item }} state=present
  with_items:
   - ctags-etags
   - libtool
   - python3-devel
  sudo: yes
  when: ansible_distribution == 'Fedora' and programming == true

- name: Install vim package
  dnf: name={{ item }} state=present
  with_items:
   - vim-enhanced
  sudo: yes
  when: ansible_distribution == 'Centos' and programming == false

- name: clone fzf
  git: repo=https://github.com/junegunn/fzf dest=~/.fzf

- name: install fzf
  shell: ~/.fzf/install

- name: pip install [autopep8, flake8]
  pip: name={{ item }}
  sudo: yes
  with_items:
    - autopep8
    - flake8

- name: install neovim-remote
  shell: "pip3 install neovim-remote"
  sudo: yes
  ignore_errors: yes

- git: repo=https://github.com/gmarik/vundle.git
       dest=~/.vim/bundle/vundle
       depth=1
       force=yes

- git: repo=https://github.com/powerline/powerline
       dest=~/.powerline
       depth=1

- name: download vim-plug
  get_url: url=https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim dest=/tmp/plug.vim

- file: path="{{ item }}" state=directory recurse=yes
  with_items:
    - "~/.vim/autoload/"
    - "~/.config/nvim/autoload/"

- copy: src=/tmp/plug.vim dest={{ item }} remote_src=yes
  with_items:
    - "~/.vim/autoload/plug.vim"
    - "~/.config/nvim/autoload/plug.vim"
